{
  "_args": [
    [
      {
        "raw": "http-api-client",
        "scope": null,
        "escapedName": "http-api-client",
        "name": "http-api-client",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/diegogatica/Desktop/Proyecto semantica/sparql4"
    ]
  ],
  "_from": "http-api-client@latest",
  "_id": "http-api-client@0.1.8",
  "_inCache": true,
  "_location": "/http-api-client",
  "_npmUser": {
    "name": "conde-nast",
    "email": "istvan.m.antal@gmail.com"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-api-client",
    "scope": null,
    "escapedName": "http-api-client",
    "name": "http-api-client",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/http-api-client/-/http-api-client-0.1.8.tgz",
  "_shasum": "e3a5c6c2d34930a2ddab26bd9c9d6b4e593d0bf3",
  "_shrinkwrap": null,
  "_spec": "http-api-client",
  "_where": "/Users/diegogatica/Desktop/Proyecto semantica/sparql4",
  "author": {
    "name": "Cond√© Nast"
  },
  "bugs": {
    "url": "https://github.com/conde-nast-international/http-api-client/issues"
  },
  "dependencies": {
    "promise": "^5.0.0"
  },
  "description": "An easy to use NodeJS HTTP API client library.",
  "devDependencies": {
    "grunt": "*",
    "grunt-contrib-jshint": "0.9.2",
    "grunt-deployinator": "0.*",
    "grunt-jscs": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "e3a5c6c2d34930a2ddab26bd9c9d6b4e593d0bf3",
    "tarball": "https://registry.npmjs.org/http-api-client/-/http-api-client-0.1.8.tgz"
  },
  "gitHead": "1807410af6be41be13e4416976f3bc0f872eb627",
  "homepage": "https://github.com/conde-nast-international/http-api-client",
  "jshintConfig": {
    "bitwise": true,
    "curly": true,
    "camelcase": true,
    "eqeqeq": true,
    "freeze": true,
    "immed": true,
    "latedef": false,
    "newcap": true,
    "noarg": true,
    "forin": true,
    "sub": true,
    "undef": true,
    "unused": true,
    "noempty": true,
    "boss": false,
    "eqnull": true,
    "browser": true,
    "indent": 4,
    "maxcomplexity": 7,
    "maxstatements": 36,
    "maxparams": 5,
    "maxdepth": 3,
    "maxlen": 100,
    "trailing": true,
    "maxerr": 5,
    "globals": {
      "module": true,
      "require": true,
      "Buffer": true
    }
  },
  "keywords": [
    "http",
    "api",
    "client"
  ],
  "license": "MIT",
  "main": "lib/http-api-client.js",
  "maintainers": [
    {
      "name": "conde-nast",
      "email": "istvan.m.antal@gmail.com"
    }
  ],
  "name": "http-api-client",
  "optionalDependencies": {},
  "readme": "# http-api-client [![Build Status](https://travis-ci.org/conde-nast-international/http-api-client.png?branch=master)](https://travis-ci.org/conde-nast-international/http-api-client)\n\nAn easy to use NodeJS HTTP API client library.\n\n# Installation\n\n```bash\nnpm install http-api-client --save\n```\n\n# Usage\n\n```js\nvar client = require('http-api-client');\n\nclient.request({\n    url: 'http://hawttrends.appspot.com/api/terms/'\n}).then(function (response) {\n    response.getStatusCode(); // returns the HTTP status code\n    console.log(response.getData()); // returns the string representation of the response body\n    response.getBuffer(); // returns the raw response Buffer object http://nodejs.org/api/buffer.html\n    response.getNativeResonse(); // returns the native NodeJS repsonse object\n    response.getJSON(); // returns a JSON-parsed repsonse\n});\n```\n\n# API\n\n```js\nclient.request({\n    url: 'http://example.com', // required, protocol can be HTTPS\n    method: 'POST',  // optional\n    encoding: 'utf8', // optional\n    parameters: { param: 'value' } // optional POST parameters,\n    cookies: { // optional object containing cookies\n        cookieName: cookieValue\n    },\n    data: rawRequestBody // optional raw request body data\n    files: { // optional file uploads\n        fieldname: {\n            name: 'filename',\n            type: 'application/octet-stream',\n            data:  fileDataBuffer\n        }\n    }\n}).then(function (/* Response object */response) {\n    // Success\n    response.request({\n        url: 'http://example.com/something'\n    }); // will make a request perserving the cookies from the previous request\n}, function (error) {\n    // Failure\n});\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/conde-nast-international/http-api-client.git"
  },
  "scripts": {
    "test": "grunt check"
  },
  "version": "0.1.8"
}
